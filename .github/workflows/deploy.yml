name: AWS Dev Deploy

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: generate firebase.json
        run: |
          python3 -m pip install -r requirements.txt
          python3 create_firebase_json.py
        env:
          firebase_private_key_id: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          firebase_private_key: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          firebase_client_email: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          firebase_client_id: ${{ secrets.FIREBASE_CLIENT_ID }}
          firebase_client_x509_cert_url: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
      - name: Setup SAM
        uses: aws-actions/setup-sam@v2

      - name: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: 'ap-northeast-1'
          role-to-assume: ${{ secrets.AWS_IAM_ARN_DEV }}
          role-session-name: GitHubActions

      - name: get-caller-identity is allowed to run on role.
        run: aws sts get-caller-identity

      - name: SAM build
        run: sam build --use-container
      - name: SAM deploy
        id: lambda_update
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name ${{ secrets.AWS_STACK_NAME_DEV }} --capabilities CAPABILITY_NAMED_IAM --parameter-overrides ParameterKey=Env,ParameterValue=dev

      - name: Generate release tag
        if: steps.lambda_update.outcome == 'success'
        id: release_tag
        run: |
          VERSION=$(date +'%Y.%m.%d.%H%M')
          echo "VERSION=v$VERSION" >> $GITHUB_OUTPUT
        env:
          TZ: 'Asia/Tokyo'

      - uses: release-drafter/release-drafter@v5
        if: steps.lambda_update.outcome == 'success'
        with:
          tag: ${{ steps.release_tag.outputs.VERSION }}
          name: ${{ steps.release_tag.outputs.VERSION }}
          version: ${{ steps.release_tag.outputs.VERSION }}
          publish: true
          commitish: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
